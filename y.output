State 67 conflicts: 2 shift/reduce
State 68 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: command

    2 command: list_command
    3        | list_command command

    4 list_command: function
    5             | call_func
    6             | operations
    7             | load
    8             | blockif
    9             | blockprint
   10             | blockelif
   11             | blockelse
   12             | ret_func
   13             | blockmain

   14 function: functype IDENTIFIER lparen IDENTIFIER rparen
   15         | functype IDENTIFIER lparen IDENTIFIER IDENTIFIER rparen
   16         | functype IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

   17 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER rparen
   18          | IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

   19 blockif: cif expression
   20        | cif IDENTIFIER

   21 blockelif: celif expression

   22 expression: IDENTIFIER percent NUM dqual NUM
   23           | IDENTIFIER less NUM
   24           | IDENTIFIER less NUM plus IDENTIFIER
   25           | IDENTIFIER percent NUM nequal NUM
   26           | IDENTIFIER lessequal NUM
   27           | IDENTIFIER dqual NUM
   28           | NUM lessequal IDENTIFIER lessequal NUM
   29           | expression cand expression
   30           | expression cor expression

   31 blockelse: celse

   32 load: IDENTIFIER ravno NUM

   33 blockprint: cprint lparen NUM rparen
   34           | cprint lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

   35 operations: IDENTIFIER add NUM
   36           | IDENTIFIER delenie NUM
   37           | IDENTIFIER delenie lparen NUM plus IDENTIFIER rparen

   38 ret_func: freturn IDENTIFIER
   39         | freturn ctrue
   40         | freturn cfalse
   41         | freturn NUM lessequal IDENTIFIER lessequal NUM
   42         | freturn NUM lessequal IDENTIFIER lessequal NUM plus IDENTIFIER

   43 blockmain: IDENTIFIER ravno cint lparen cinput lparen rparen rparen
   44          | IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <var> (258) 14 15 16 17 18 20 22 23 24 25 26 27 28 32 34 35 36 37 38 41 42 43 44
    NUM <var> (259) 22 23 24 25 26 27 28 32 33 35 36 37 41 42
    lparen <var> (260) 14 15 16 17 18 33 34 37 43 44
    rparen <var> (261) 14 15 16 17 18 33 34 37 43 44
    functype <code> (262) 14 15 16
    freturn <code> (263) 38 39 40 41 42
    cif <code> (264) 19 20
    celse <code> (265) 31
    dqual <code> (266) 22 27
    nequal <code> (267) 25
    percent <code> (268) 22 25
    lessequal <code> (269) 26 28 41 42
    cand <code> (270) 29
    cor <code> (271) 30
    ctrue <code> (272) 39
    cfalse <code> (273) 40
    plus <code> (274) 24 37 42
    celif <code> (275) 21
    ravno <code> (276) 17 18 32 43
    less <code> (277) 23 24
    delenie <code> (278) 36 37
    add <code> (279) 35
    cprint <code> (280) 33 34
    cint <code> (281) 43
    cinput <code> (282) 43


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    start <code> (29)
        on left: 1
        on right: 0
    command <code> (30)
        on left: 2 3
        on right: 1 3
    list_command <code> (31)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3
    function <code> (32)
        on left: 14 15 16
        on right: 4
    call_func <code> (33)
        on left: 17 18
        on right: 5
    blockif <code> (34)
        on left: 19 20
        on right: 8
    blockelif <code> (35)
        on left: 21
        on right: 10
    expression <code> (36)
        on left: 22 23 24 25 26 27 28 29 30
        on right: 19 21 29 30
    blockelse <code> (37)
        on left: 31
        on right: 11
    load <code> (38)
        on left: 32
        on right: 7
    blockprint <code> (39)
        on left: 33 34
        on right: 9
    operations <code> (40)
        on left: 35 36 37
        on right: 6
    ret_func <code> (41)
        on left: 38 39 40 41 42
        on right: 12
    blockmain <code> (42)
        on left: 43 44
        on right: 13


State 0

    0 $accept: • start $end

    IDENTIFIER  shift, and go to state 1
    functype    shift, and go to state 2
    freturn     shift, and go to state 3
    cif         shift, and go to state 4
    celse       shift, and go to state 5
    celif       shift, and go to state 6
    cprint      shift, and go to state 7

    start         go to state 8
    command       go to state 9
    list_command  go to state 10
    function      go to state 11
    call_func     go to state 12
    blockif       go to state 13
    blockelif     go to state 14
    blockelse     go to state 15
    load          go to state 16
    blockprint    go to state 17
    operations    go to state 18
    ret_func      go to state 19
    blockmain     go to state 20


State 1

   17 call_func: IDENTIFIER • ravno IDENTIFIER lparen IDENTIFIER rparen
   18          | IDENTIFIER • ravno IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen
   32 load: IDENTIFIER • ravno NUM
   35 operations: IDENTIFIER • add NUM
   36           | IDENTIFIER • delenie NUM
   37           | IDENTIFIER • delenie lparen NUM plus IDENTIFIER rparen
   43 blockmain: IDENTIFIER • ravno cint lparen cinput lparen rparen rparen
   44          | IDENTIFIER • lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

    lparen   shift, and go to state 21
    ravno    shift, and go to state 22
    delenie  shift, and go to state 23
    add      shift, and go to state 24


State 2

   14 function: functype • IDENTIFIER lparen IDENTIFIER rparen
   15         | functype • IDENTIFIER lparen IDENTIFIER IDENTIFIER rparen
   16         | functype • IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 25


State 3

   38 ret_func: freturn • IDENTIFIER
   39         | freturn • ctrue
   40         | freturn • cfalse
   41         | freturn • NUM lessequal IDENTIFIER lessequal NUM
   42         | freturn • NUM lessequal IDENTIFIER lessequal NUM plus IDENTIFIER

    IDENTIFIER  shift, and go to state 26
    NUM         shift, and go to state 27
    ctrue       shift, and go to state 28
    cfalse      shift, and go to state 29


State 4

   19 blockif: cif • expression
   20        | cif • IDENTIFIER

    IDENTIFIER  shift, and go to state 30
    NUM         shift, and go to state 31

    expression  go to state 32


State 5

   31 blockelse: celse •

    $default  reduce using rule 31 (blockelse)


State 6

   21 blockelif: celif • expression

    IDENTIFIER  shift, and go to state 33
    NUM         shift, and go to state 31

    expression  go to state 34


State 7

   33 blockprint: cprint • lparen NUM rparen
   34           | cprint • lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

    lparen  shift, and go to state 35


State 8

    0 $accept: start • $end

    $end  shift, and go to state 36


State 9

    1 start: command •

    $default  reduce using rule 1 (start)


State 10

    2 command: list_command •
    3        | list_command • command

    IDENTIFIER  shift, and go to state 1
    functype    shift, and go to state 2
    freturn     shift, and go to state 3
    cif         shift, and go to state 4
    celse       shift, and go to state 5
    celif       shift, and go to state 6
    cprint      shift, and go to state 7

    $default  reduce using rule 2 (command)

    command       go to state 37
    list_command  go to state 10
    function      go to state 11
    call_func     go to state 12
    blockif       go to state 13
    blockelif     go to state 14
    blockelse     go to state 15
    load          go to state 16
    blockprint    go to state 17
    operations    go to state 18
    ret_func      go to state 19
    blockmain     go to state 20


State 11

    4 list_command: function •

    $default  reduce using rule 4 (list_command)


State 12

    5 list_command: call_func •

    $default  reduce using rule 5 (list_command)


State 13

    8 list_command: blockif •

    $default  reduce using rule 8 (list_command)


State 14

   10 list_command: blockelif •

    $default  reduce using rule 10 (list_command)


State 15

   11 list_command: blockelse •

    $default  reduce using rule 11 (list_command)


State 16

    7 list_command: load •

    $default  reduce using rule 7 (list_command)


State 17

    9 list_command: blockprint •

    $default  reduce using rule 9 (list_command)


State 18

    6 list_command: operations •

    $default  reduce using rule 6 (list_command)


State 19

   12 list_command: ret_func •

    $default  reduce using rule 12 (list_command)


State 20

   13 list_command: blockmain •

    $default  reduce using rule 13 (list_command)


State 21

   44 blockmain: IDENTIFIER lparen • IDENTIFIER IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 38


State 22

   17 call_func: IDENTIFIER ravno • IDENTIFIER lparen IDENTIFIER rparen
   18          | IDENTIFIER ravno • IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen
   32 load: IDENTIFIER ravno • NUM
   43 blockmain: IDENTIFIER ravno • cint lparen cinput lparen rparen rparen

    IDENTIFIER  shift, and go to state 39
    NUM         shift, and go to state 40
    cint        shift, and go to state 41


State 23

   36 operations: IDENTIFIER delenie • NUM
   37           | IDENTIFIER delenie • lparen NUM plus IDENTIFIER rparen

    NUM     shift, and go to state 42
    lparen  shift, and go to state 43


State 24

   35 operations: IDENTIFIER add • NUM

    NUM  shift, and go to state 44


State 25

   14 function: functype IDENTIFIER • lparen IDENTIFIER rparen
   15         | functype IDENTIFIER • lparen IDENTIFIER IDENTIFIER rparen
   16         | functype IDENTIFIER • lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

    lparen  shift, and go to state 45


State 26

   38 ret_func: freturn IDENTIFIER •

    $default  reduce using rule 38 (ret_func)


State 27

   41 ret_func: freturn NUM • lessequal IDENTIFIER lessequal NUM
   42         | freturn NUM • lessequal IDENTIFIER lessequal NUM plus IDENTIFIER

    lessequal  shift, and go to state 46


State 28

   39 ret_func: freturn ctrue •

    $default  reduce using rule 39 (ret_func)


State 29

   40 ret_func: freturn cfalse •

    $default  reduce using rule 40 (ret_func)


State 30

   20 blockif: cif IDENTIFIER •
   22 expression: IDENTIFIER • percent NUM dqual NUM
   23           | IDENTIFIER • less NUM
   24           | IDENTIFIER • less NUM plus IDENTIFIER
   25           | IDENTIFIER • percent NUM nequal NUM
   26           | IDENTIFIER • lessequal NUM
   27           | IDENTIFIER • dqual NUM

    dqual      shift, and go to state 47
    percent    shift, and go to state 48
    lessequal  shift, and go to state 49
    less       shift, and go to state 50

    $default  reduce using rule 20 (blockif)


State 31

   28 expression: NUM • lessequal IDENTIFIER lessequal NUM

    lessequal  shift, and go to state 51


State 32

   19 blockif: cif expression •
   29 expression: expression • cand expression
   30           | expression • cor expression

    cand  shift, and go to state 52
    cor   shift, and go to state 53

    $default  reduce using rule 19 (blockif)


State 33

   22 expression: IDENTIFIER • percent NUM dqual NUM
   23           | IDENTIFIER • less NUM
   24           | IDENTIFIER • less NUM plus IDENTIFIER
   25           | IDENTIFIER • percent NUM nequal NUM
   26           | IDENTIFIER • lessequal NUM
   27           | IDENTIFIER • dqual NUM

    dqual      shift, and go to state 47
    percent    shift, and go to state 48
    lessequal  shift, and go to state 49
    less       shift, and go to state 50


State 34

   21 blockelif: celif expression •
   29 expression: expression • cand expression
   30           | expression • cor expression

    cand  shift, and go to state 52
    cor   shift, and go to state 53

    $default  reduce using rule 21 (blockelif)


State 35

   33 blockprint: cprint lparen • NUM rparen
   34           | cprint lparen • IDENTIFIER IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 54
    NUM         shift, and go to state 55


State 36

    0 $accept: start $end •

    $default  accept


State 37

    3 command: list_command command •

    $default  reduce using rule 3 (command)


State 38

   44 blockmain: IDENTIFIER lparen IDENTIFIER • IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 56


State 39

   17 call_func: IDENTIFIER ravno IDENTIFIER • lparen IDENTIFIER rparen
   18          | IDENTIFIER ravno IDENTIFIER • lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen

    lparen  shift, and go to state 57


State 40

   32 load: IDENTIFIER ravno NUM •

    $default  reduce using rule 32 (load)


State 41

   43 blockmain: IDENTIFIER ravno cint • lparen cinput lparen rparen rparen

    lparen  shift, and go to state 58


State 42

   36 operations: IDENTIFIER delenie NUM •

    $default  reduce using rule 36 (operations)


State 43

   37 operations: IDENTIFIER delenie lparen • NUM plus IDENTIFIER rparen

    NUM  shift, and go to state 59


State 44

   35 operations: IDENTIFIER add NUM •

    $default  reduce using rule 35 (operations)


State 45

   14 function: functype IDENTIFIER lparen • IDENTIFIER rparen
   15         | functype IDENTIFIER lparen • IDENTIFIER IDENTIFIER rparen
   16         | functype IDENTIFIER lparen • IDENTIFIER IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 60


State 46

   41 ret_func: freturn NUM lessequal • IDENTIFIER lessequal NUM
   42         | freturn NUM lessequal • IDENTIFIER lessequal NUM plus IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 47

   27 expression: IDENTIFIER dqual • NUM

    NUM  shift, and go to state 62


State 48

   22 expression: IDENTIFIER percent • NUM dqual NUM
   25           | IDENTIFIER percent • NUM nequal NUM

    NUM  shift, and go to state 63


State 49

   26 expression: IDENTIFIER lessequal • NUM

    NUM  shift, and go to state 64


State 50

   23 expression: IDENTIFIER less • NUM
   24           | IDENTIFIER less • NUM plus IDENTIFIER

    NUM  shift, and go to state 65


State 51

   28 expression: NUM lessequal • IDENTIFIER lessequal NUM

    IDENTIFIER  shift, and go to state 66


State 52

   29 expression: expression cand • expression

    IDENTIFIER  shift, and go to state 33
    NUM         shift, and go to state 31

    expression  go to state 67


State 53

   30 expression: expression cor • expression

    IDENTIFIER  shift, and go to state 33
    NUM         shift, and go to state 31

    expression  go to state 68


State 54

   34 blockprint: cprint lparen IDENTIFIER • IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 69


State 55

   33 blockprint: cprint lparen NUM • rparen

    rparen  shift, and go to state 70


State 56

   44 blockmain: IDENTIFIER lparen IDENTIFIER IDENTIFIER • IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 71


State 57

   17 call_func: IDENTIFIER ravno IDENTIFIER lparen • IDENTIFIER rparen
   18          | IDENTIFIER ravno IDENTIFIER lparen • IDENTIFIER IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 72


State 58

   43 blockmain: IDENTIFIER ravno cint lparen • cinput lparen rparen rparen

    cinput  shift, and go to state 73


State 59

   37 operations: IDENTIFIER delenie lparen NUM • plus IDENTIFIER rparen

    plus  shift, and go to state 74


State 60

   14 function: functype IDENTIFIER lparen IDENTIFIER • rparen
   15         | functype IDENTIFIER lparen IDENTIFIER • IDENTIFIER rparen
   16         | functype IDENTIFIER lparen IDENTIFIER • IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 75
    rparen      shift, and go to state 76


State 61

   41 ret_func: freturn NUM lessequal IDENTIFIER • lessequal NUM
   42         | freturn NUM lessequal IDENTIFIER • lessequal NUM plus IDENTIFIER

    lessequal  shift, and go to state 77


State 62

   27 expression: IDENTIFIER dqual NUM •

    $default  reduce using rule 27 (expression)


State 63

   22 expression: IDENTIFIER percent NUM • dqual NUM
   25           | IDENTIFIER percent NUM • nequal NUM

    dqual   shift, and go to state 78
    nequal  shift, and go to state 79


State 64

   26 expression: IDENTIFIER lessequal NUM •

    $default  reduce using rule 26 (expression)


State 65

   23 expression: IDENTIFIER less NUM •
   24           | IDENTIFIER less NUM • plus IDENTIFIER

    plus  shift, and go to state 80

    $default  reduce using rule 23 (expression)


State 66

   28 expression: NUM lessequal IDENTIFIER • lessequal NUM

    lessequal  shift, and go to state 81


State 67

   29 expression: expression • cand expression
   29           | expression cand expression •
   30           | expression • cor expression

    cand  shift, and go to state 52
    cor   shift, and go to state 53

    cand      [reduce using rule 29 (expression)]
    cor       [reduce using rule 29 (expression)]
    $default  reduce using rule 29 (expression)

    shift/reduce conflict on token cand:
       29 expression: expression cand expression •
       29 expression: expression • cand expression
      Example: expression cand expression • cand expression
      Shift derivation
        expression
        ↳ 29: expression cand expression
                              ↳ 29: expression • cand expression
      Reduce derivation
        expression
        ↳ 29: expression                         cand expression
              ↳ 29: expression cand expression •

    shift/reduce conflict on token cor:
       29 expression: expression cand expression •
       30 expression: expression • cor expression
      Example: expression cand expression • cor expression
      Shift derivation
        expression
        ↳ 29: expression cand expression
                              ↳ 30: expression • cor expression
      Reduce derivation
        expression
        ↳ 30: expression                         cor expression
              ↳ 29: expression cand expression •



State 68

   29 expression: expression • cand expression
   30           | expression • cor expression
   30           | expression cor expression •

    cand  shift, and go to state 52
    cor   shift, and go to state 53

    cand      [reduce using rule 30 (expression)]
    cor       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)

    shift/reduce conflict on token cand:
       30 expression: expression cor expression •
       29 expression: expression • cand expression
      Example: expression cor expression • cand expression
      Shift derivation
        expression
        ↳ 30: expression cor expression
                             ↳ 29: expression • cand expression
      Reduce derivation
        expression
        ↳ 29: expression                        cand expression
              ↳ 30: expression cor expression •

    shift/reduce conflict on token cor:
       30 expression: expression cor expression •
       30 expression: expression • cor expression
      Example: expression cor expression • cor expression
      Shift derivation
        expression
        ↳ 30: expression cor expression
                             ↳ 30: expression • cor expression
      Reduce derivation
        expression
        ↳ 30: expression                        cor expression
              ↳ 30: expression cor expression •



State 69

   34 blockprint: cprint lparen IDENTIFIER IDENTIFIER • IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 82


State 70

   33 blockprint: cprint lparen NUM rparen •

    $default  reduce using rule 33 (blockprint)


State 71

   44 blockmain: IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER • rparen

    rparen  shift, and go to state 83


State 72

   17 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER • rparen
   18          | IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER • IDENTIFIER IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 84
    rparen      shift, and go to state 85


State 73

   43 blockmain: IDENTIFIER ravno cint lparen cinput • lparen rparen rparen

    lparen  shift, and go to state 86


State 74

   37 operations: IDENTIFIER delenie lparen NUM plus • IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 87


State 75

   15 function: functype IDENTIFIER lparen IDENTIFIER IDENTIFIER • rparen
   16         | functype IDENTIFIER lparen IDENTIFIER IDENTIFIER • IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 88
    rparen      shift, and go to state 89


State 76

   14 function: functype IDENTIFIER lparen IDENTIFIER rparen •

    $default  reduce using rule 14 (function)


State 77

   41 ret_func: freturn NUM lessequal IDENTIFIER lessequal • NUM
   42         | freturn NUM lessequal IDENTIFIER lessequal • NUM plus IDENTIFIER

    NUM  shift, and go to state 90


State 78

   22 expression: IDENTIFIER percent NUM dqual • NUM

    NUM  shift, and go to state 91


State 79

   25 expression: IDENTIFIER percent NUM nequal • NUM

    NUM  shift, and go to state 92


State 80

   24 expression: IDENTIFIER less NUM plus • IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 81

   28 expression: NUM lessequal IDENTIFIER lessequal • NUM

    NUM  shift, and go to state 94


State 82

   34 blockprint: cprint lparen IDENTIFIER IDENTIFIER IDENTIFIER • rparen

    rparen  shift, and go to state 95


State 83

   44 blockmain: IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen •

    $default  reduce using rule 44 (blockmain)


State 84

   18 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER IDENTIFIER • IDENTIFIER rparen

    IDENTIFIER  shift, and go to state 96


State 85

   17 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER rparen •

    $default  reduce using rule 17 (call_func)


State 86

   43 blockmain: IDENTIFIER ravno cint lparen cinput lparen • rparen rparen

    rparen  shift, and go to state 97


State 87

   37 operations: IDENTIFIER delenie lparen NUM plus IDENTIFIER • rparen

    rparen  shift, and go to state 98


State 88

   16 function: functype IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER • rparen

    rparen  shift, and go to state 99


State 89

   15 function: functype IDENTIFIER lparen IDENTIFIER IDENTIFIER rparen •

    $default  reduce using rule 15 (function)


State 90

   41 ret_func: freturn NUM lessequal IDENTIFIER lessequal NUM •
   42         | freturn NUM lessequal IDENTIFIER lessequal NUM • plus IDENTIFIER

    plus  shift, and go to state 100

    $default  reduce using rule 41 (ret_func)


State 91

   22 expression: IDENTIFIER percent NUM dqual NUM •

    $default  reduce using rule 22 (expression)


State 92

   25 expression: IDENTIFIER percent NUM nequal NUM •

    $default  reduce using rule 25 (expression)


State 93

   24 expression: IDENTIFIER less NUM plus IDENTIFIER •

    $default  reduce using rule 24 (expression)


State 94

   28 expression: NUM lessequal IDENTIFIER lessequal NUM •

    $default  reduce using rule 28 (expression)


State 95

   34 blockprint: cprint lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen •

    $default  reduce using rule 34 (blockprint)


State 96

   18 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER • rparen

    rparen  shift, and go to state 101


State 97

   43 blockmain: IDENTIFIER ravno cint lparen cinput lparen rparen • rparen

    rparen  shift, and go to state 102


State 98

   37 operations: IDENTIFIER delenie lparen NUM plus IDENTIFIER rparen •

    $default  reduce using rule 37 (operations)


State 99

   16 function: functype IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen •

    $default  reduce using rule 16 (function)


State 100

   42 ret_func: freturn NUM lessequal IDENTIFIER lessequal NUM plus • IDENTIFIER

    IDENTIFIER  shift, and go to state 103


State 101

   18 call_func: IDENTIFIER ravno IDENTIFIER lparen IDENTIFIER IDENTIFIER IDENTIFIER rparen •

    $default  reduce using rule 18 (call_func)


State 102

   43 blockmain: IDENTIFIER ravno cint lparen cinput lparen rparen rparen •

    $default  reduce using rule 43 (blockmain)


State 103

   42 ret_func: freturn NUM lessequal IDENTIFIER lessequal NUM plus IDENTIFIER •

    $default  reduce using rule 42 (ret_func)
